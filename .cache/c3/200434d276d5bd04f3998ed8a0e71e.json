{"id":"JyuG","dependencies":[{"name":"C:\\Users\\id4pr\\Documents\\Web Devlopment\\Star Wars\\package.json","includedInParent":true,"mtime":1632152310981}],"generated":{"js":"//This code was modified by Pranjal Goyal by copying  from https://codepen.io/hakimel/pen/bzrZGo\nvar STAR_COUNT = (window.innerWidth + window.innerHeight) / 25,\n    STAR_SIZE = 3,\n    STAR_MIN_SCALE = 0.2,\n    OVERFLOW_THRESHOLD = 50;\nvar canvas = document.querySelector('canvas'),\n    context = canvas.getContext('2d');\nvar scale = 1,\n    // device pixel ratio\nwidth,\n    height;\nvar stars = [];\nvar pointerX, pointerY;\nvar velocity = {\n  x: 0,\n  y: 0,\n  tx: 0,\n  ty: 0,\n  z: 0.0005\n};\nvar touchInput = false;\ngenerate();\nresize();\nstep();\nwindow.onresize = resize;\ncanvas.onmousemove = onMouseMove;\ncanvas.ontouchmove = onTouchMove;\ncanvas.ontouchend = onMouseLeave;\ndocument.onmouseleave = onMouseLeave;\n\nfunction generate() {\n  for (var i = 0; i < STAR_COUNT; i++) {\n    stars.push({\n      x: 0,\n      y: 0,\n      z: STAR_MIN_SCALE + Math.random() * (1 - STAR_MIN_SCALE)\n    });\n  }\n}\n\nfunction placeStar(star) {\n  star.x = Math.random() * width;\n  star.y = Math.random() * height;\n}\n\nfunction recycleStar(star) {\n  var direction = 'z';\n  var vx = Math.abs(velocity.x),\n      vy = Math.abs(velocity.y);\n\n  if (vx > 1 || vy > 1) {\n    var axis;\n\n    if (vx > vy) {\n      axis = Math.random() < vx / (vx + vy) ? 'h' : 'v';\n    } else {\n      axis = Math.random() < vy / (vx + vy) ? 'v' : 'h';\n    }\n\n    if (axis === 'h') {\n      direction = velocity.x > 0 ? 'l' : 'r';\n    } else {\n      direction = velocity.y > 0 ? 't' : 'b';\n    }\n  }\n\n  star.z = STAR_MIN_SCALE + Math.random() * (1 - STAR_MIN_SCALE);\n\n  if (direction === 'z') {\n    star.z = 0.1;\n    star.x = Math.random() * width;\n    star.y = Math.random() * height;\n  } else if (direction === 'l') {\n    star.x = -OVERFLOW_THRESHOLD;\n    star.y = height * Math.random();\n  } else if (direction === 'r') {\n    star.x = width + OVERFLOW_THRESHOLD;\n    star.y = height * Math.random();\n  } else if (direction === 't') {\n    star.x = width * Math.random();\n    star.y = -OVERFLOW_THRESHOLD;\n  } else if (direction === 'b') {\n    star.x = width * Math.random();\n    star.y = height + OVERFLOW_THRESHOLD;\n  }\n}\n\nfunction resize() {\n  scale = window.devicePixelRatio || 1;\n  width = window.innerWidth * scale;\n  height = window.innerHeight * scale;\n  canvas.width = width;\n  canvas.height = height;\n  stars.forEach(placeStar);\n}\n\nfunction step() {\n  context.clearRect(0, 0, width, height);\n  update();\n  render();\n  requestAnimationFrame(step);\n}\n\nfunction update() {\n  velocity.tx *= 0.96;\n  velocity.ty *= 0.96;\n  velocity.x += (velocity.tx - velocity.x) * 0.8;\n  velocity.y += (velocity.ty - velocity.y) * 0.8;\n  stars.forEach(function (star) {\n    star.x += velocity.x * star.z;\n    star.y += velocity.y * star.z;\n    star.x += (star.x - width / 2) * velocity.z * star.z;\n    star.y += (star.y - height / 2) * velocity.z * star.z;\n    star.z += velocity.z; // recycle when out of bounds\n\n    if (star.x < -OVERFLOW_THRESHOLD || star.x > width + OVERFLOW_THRESHOLD || star.y < -OVERFLOW_THRESHOLD || star.y > height + OVERFLOW_THRESHOLD) {\n      recycleStar(star);\n    }\n  });\n}\n\nfunction render() {\n  stars.forEach(function (star) {\n    context.beginPath();\n    context.lineCap = 'round';\n    context.lineWidth = STAR_SIZE * star.z * scale;\n    context.strokeStyle = 'rgba(255,255,255,' + (0.5 + 0.5 * Math.random()) + ')';\n    context.beginPath();\n    context.moveTo(star.x, star.y);\n    var tailX = velocity.x * 2,\n        tailY = velocity.y * 2; // stroke() wont work on an invisible line\n\n    if (Math.abs(tailX) < 0.1) tailX = 0.5;\n    if (Math.abs(tailY) < 0.1) tailY = 0.5;\n    context.lineTo(star.x + tailX, star.y + tailY);\n    context.stroke();\n  });\n}\n\nfunction movePointer(x, y) {\n  if (typeof pointerX === 'number' && typeof pointerY === 'number') {\n    var ox = x - pointerX,\n        oy = y - pointerY;\n    velocity.tx = velocity.tx + ox / 8 * scale * (touchInput ? 1 : -1);\n    velocity.ty = velocity.ty + oy / 8 * scale * (touchInput ? 1 : -1);\n  }\n\n  pointerX = x;\n  pointerY = y;\n}\n\nfunction onMouseMove(event) {\n  touchInput = false;\n  movePointer(event.clientX, event.clientY);\n}\n\nfunction onTouchMove(event) {\n  touchInput = true;\n  movePointer(event.touches[0].clientX, event.touches[0].clientY, true);\n  event.preventDefault();\n}\n\nfunction onMouseLeave() {\n  pointerX = null;\n  pointerY = null;\n}"},"sourceMaps":null,"error":null,"hash":"d983581840de5a585fd07ae9412a5760","cacheData":{"env":{}}}